{"version":3,"sources":["/Users/sharvil/Desktop/ASU Courses/QuizMe/src/app/layout/question-history/question-history-routing.module.ts","/Users/sharvil/Desktop/ASU Courses/QuizMe/src/app/layout/question-history/question-history.component.html","/Users/sharvil/Desktop/ASU Courses/QuizMe/src/app/layout/question-history/question-history.component.scss","/Users/sharvil/Desktop/ASU Courses/QuizMe/src/app/layout/question-history/question-history.component.ts","/Users/sharvil/Desktop/ASU Courses/QuizMe/src/app/layout/question-history/question-history.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAuC;AACc;AAEiB;AAEtE,IAAM,MAAM,GAAW;IACnB,EAAC,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,6FAAwB,EAAC;CAClD,CAAC;AAMF;IAAA;IACA,CAAC;IADY,4BAA4B;QAJxC,+DAAQ,CAAC;YACN,OAAO,EAAE,CAAC,qEAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,qEAAY,CAAC;SAC1B,CAAC;OACW,4BAA4B,CACxC;IAAD,mCAAC;CAAA;AADwC;;;;;;;;ACbzC,uPAAuP,eAAe,8WAA8W,eAAe,iBAAiB,yEAAyE,eAAe,aAAa,QAAQ,OAAO,IAAI,eAAe,sOAAsO,eAAe,iBAAiB,yEAAyE,gBAAgB,aAAa,QAAQ,OAAO,IAAI,eAAe,sSAAsS,mBAAmB,mQAAmQ,gFAAgF,0DAA0D,qBAAqB,sBAAsB,yEAAyE,gFAAgF,0DAA0D,qBAAqB,sBAAsB,yEAAyE,gFAAgF,0DAA0D,qBAAqB,sBAAsB,yEAAyE,gFAAgF,0DAA0D,qBAAqB,sBAAsB,yEAAyE,gFAAgF,0DAA0D,qBAAqB,sBAAsB,wBAAwB,qFAAqF,qGAAqG,iBAAiB,cAAc,uDAAuD,wGAAwG,aAAa,cAAc,uDAAuD,sHAAsH,2vCAA2vC,WAAW,0BAA0B,oBAAoB,iBAAiB,ynBAAynB,eAAe,2EAA2E,uBAAuB,8CAA8C,gEAAgE,eAAe,2RAA2R,2CAA2C,aAAa,kRAAkR,8CAA8C,eAAe,+cAA+c,gBAAgB,ujCAAujC,qHAAqH,aAAa,sBAAsB,SAAS,iCAAiC,QAAQ,uBAAuB,QAAQ,oO;;;;;;;ACAvjQ;AACA;;;AAGA;AACA,wCAAyC,gBAAgB,uBAAuB,uBAAuB,qBAAqB,EAAE,qBAAqB,gBAAgB,qBAAqB,EAAE,oBAAoB,qBAAqB,EAAE,mBAAmB,qBAAqB,sBAAsB,EAAE;;AAErS;;;AAGA;AACA,2C;;;;;;;;;;;;;;;;;;;;;;;ACXmE;AACd;AACd;AACkB;AACgB;AAUzE;IAoCI,kCAAmB,MAAc,EAAU,OAAuB,EAAU,YAAsB;QAA/E,WAAM,GAAN,MAAM,CAAQ;QAAU,YAAO,GAAP,OAAO,CAAgB;QAAU,iBAAY,GAAZ,YAAY,CAAU;QAlClG,gBAAW,GAAG,EAAE,CAAC;QAEjB,SAAI,GAAG,EAAE,CAAC;QAGV,WAAM,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,CAAC;QAC5D,aAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,KAAK,CAAC;QACjE,WAAM,GAAG,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAKxC,iBAAY,GAAG,EAAE,CAAC;QAClB,qBAAgB,GAAG,KAAK,CAAC;QACzB,YAAY;QACZ;;;;;;;;;;;;;;;;aAgBK;QACL,cAAS,GAAG,KAAK,CAAC;IAGlB,CAAC;IAED,2CAAQ,GAAR;QAAA,iBAkBC;QAjBG,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAC5C,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAChD,IAAI,CAAS,CAAC;QACd,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC;aACpD,SAAS,CAAC,gBAAM;YACb,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACpB,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,KAAI,CAAC,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC;YAC9D,KAAI,CAAC,IAAI,GAAG,EAAE,CAAC;YACf,GAAG,CAAC,CAAC,IAAI,GAAC,GAAG,CAAC,EAAE,GAAC,GAAG,KAAI,CAAC,MAAM,CAAC,MAAM,EAAE,GAAC,EAAE;gBACvC,KAAI,CAAC,IAAI,CAAC,GAAC,CAAC,GAAG,KAAK,CAAC;YACzB,6CAA6C;YAC7C,wEAAwE;YACxE,IAAI;YACJ,mEAAmE;YACnE,uCAAuC;QAC3C,CAAC,CAAC,CAAC;IACX,CAAC;IAED,wDAAqB,GAArB,UAAsB,UAAU,EAAE,QAAQ;QAA1C,iBAsCC;QArCG,OAAO,CAAC,GAAG,CAAC,cAAc,GAAG,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,OAAO,CAAC,qBAAqB,CAAC,UAAU,CAAC,CAAC,SAAS,CACpD,UAAC,QAAQ;YACL,yBAAyB;YACzB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBACvC,IAAM,OAAO,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;gBAChD,IAAM,IAAI,GAAG;oBACT,UAAU,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK;oBAC7B,WAAW,EAAE,OAAO;oBACpB,SAAS,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI;oBAC3B,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM;oBAC5B,UAAU,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ;oBAChC,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE;iBAC3B,CAAC;gBACF,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC;gBAC9B,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAChC,CAAC;YACD,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC;gBAChC,MAAM,CAAC,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,CAAC;YACrC,CAAC,CAAC,CAAC;YACH,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC;QAClC,CAAC,CACJ,CAAC;QACF,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAC1C,EAAE,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC;YACpB,CAAC;YACD,IAAI;gBACA,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;QAC7B,CAAC;QACD,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,CAAC,CAAC;YACzB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC/C,CAAC;QACD,IAAI,CAAC,CAAC;YACF,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QAC3B,CAAC;IAEL,CAAC;IAED,8CAAW,GAAX,UAAY,UAAU;QAAtB,iBAyBC;QAxBG,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACxB,IAAI,CAAC,QAAQ,GAAG,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QACjD,IAAM,OAAO,GAAG;YACZ,SAAS,EAAE,QAAQ,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YACnD,aAAa,EAAE,UAAU;YACzB,MAAM,EAAE,IAAI,CAAC,OAAO;YACpB,SAAS,EAAE,CAAC;YACZ,WAAW,EAAE,CAAC;SACjB,CAAC;QACF,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,SAAS,CAC1C,UAAC,QAAa;YACV,IAAM,IAAI,GAAG;gBACT,UAAU,EAAE,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC;gBAC5C,WAAW,EAAE,QAAQ,CAAC,SAAS;gBAC/B,SAAS,EAAE,KAAI,CAAC,OAAO;gBACvB,QAAQ,EAAE,CAAC;gBACX,UAAU,EAAE,CAAC;aAChB,CAAC;YACF,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC5B,OAAO,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACxB,KAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QACtB,CAAC,CACJ,CAAC;QACF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IACzC,CAAC;IAED,kDAAe,GAAf,UAAgB,MAAW,EAAE,UAAe,EAAE,CAAC;QAA/C,iBASC;QARG,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,SAAS,CAC1C,UAAC,QAAkB;YACf,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;YAC9B,4EAA4E;YAC5E,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,KAAI,CAAC,qBAAqB,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;QAC9C,CAAC,CAAC,CAAC;IACX,CAAC;IAED,oDAAiB,GAAjB,UAAkB,MAAW,EAAE,UAAe,EAAE,CAAC;QAAjD,iBAQC;QAPG,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,SAAS,CAC5C,UAAC,QAAkB;YACf,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACpB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;YAC9B,6EAA6E;YAC7E,KAAI,CAAC,qBAAqB,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;QAC9C,CAAC,CAAC,CAAC;IACX,CAAC;IAED,sDAAmB,GAAnB,UAAoB,OAAO,EAAE,QAAQ;QAArC,iBAgCC;QA/BG,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,GAAG,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;QACrC,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;QAChC,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;QAC7B,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QAC5B,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QAC5B,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;QAC7B,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QAC5B,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QAC5B,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QAC5B,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;QAC7B,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;QAC7B,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QAC5B,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QAC5B,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QAC5B,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QAC5B,GAAG,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC;QACrC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC,SAAS,CACzC,UAAC,QAAa;YACV,GAAG,CAAC,CAAU,UAAkB,EAAlB,aAAQ,CAAC,IAAI,CAAC,IAAI,EAAlB,cAAkB,EAAlB,IAAkB;gBAA3B,IAAI,CAAC;gBACN,IAAI,KAAK,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC;gBAC5B,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;gBAClC,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;gBACnC,IAAI,GAAG,GAAG,EAAC,MAAM,EAAG,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,EAAE,KAAK,EAAC,CAAC;gBACpD,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aAC/B;YACD,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,YAAY,CAAC,CAAC;QACnC,CAAC,CACJ,CAAC;QACF,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACvB,CAAC;IAED,uCAAI,GAAJ,UAAK,OAAO;QAAZ,iBAMC;QALG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,UAAC,MAAM;YAC/C,KAAI,CAAC,WAAW,GAAG,kBAAgB,MAAQ,CAAC;QAChD,CAAC,EAAE,UAAC,MAAM;YACN,KAAI,CAAC,WAAW,GAAG,eAAa,KAAI,CAAC,gBAAgB,CAAC,MAAM,CAAG,CAAC;QACpE,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,mDAAgB,GAAxB,UAAyB,MAAW;QAChC,EAAE,CAAC,CAAC,MAAM,KAAK,uFAAmB,CAAC,GAAG,CAAC,CAAC,CAAC;YACrC,MAAM,CAAC,iBAAiB,CAAC;QAC7B,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,uFAAmB,CAAC,cAAc,CAAC,CAAC,CAAC;YACvD,MAAM,CAAC,2BAA2B,CAAC;QACvC,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,MAAM,CAAE,WAAS,MAAQ,CAAC;QAC9B,CAAC;IACL,CAAC;IArMQ,wBAAwB;QARpC,gEAAS,CAAC;YACP,QAAQ,EAAE,sBAAsB;YAChC,+GAAgD;YAChD,+GAAgD;YAChD,aAAa,EAAE,gEAAiB,CAAC,IAAI;YACrC,UAAU,EAAE,CAAC,oFAAgB,EAAE,CAAC;SAEnC,CAAC;6DAqC6B,+DAAM,oBAAN,+DAAM,sDAAmB,wEAAc,oBAAd,wEAAc,sDAAwB,4EAAQ,oBAAR,4EAAQ;OApCzF,wBAAwB,CAuMpC;IAAD,+BAAC;;CAAA;AAvMoC;;;;;;;;;;;;;;;;;;;;;;;;;;ACdE;AACM;AACyB;AACjB;AACgC;AAC1C;AACH;AACuC;AAa/E;IAAA;IACA,CAAC;IADY,qBAAqB;QAXjC,+DAAQ,CAAC;YACN,OAAO,EAAE;gBACL,6DAAY;gBACZ,sGAA4B;gBAC5B,mEAAW;gBACX,wDAAY;gBACZ,wGAAgB;gBAChB,6EAAS,CAAC,OAAO,EAAE;aACtB;YACD,YAAY,EAAE,CAAC,6FAAwB,CAAC;SAC3C,CAAC;OACW,qBAAqB,CACjC;IAAD,4BAAC;CAAA;AADiC","file":"question-history.module.chunk.js","sourcesContent":["import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\n\nimport {QuestionHistoryComponent} from './question-history.component';\n\nconst routes: Routes = [\n    {path: '', component: QuestionHistoryComponent}\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class QuestionHistoryRoutingModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sharvil/Desktop/ASU Courses/QuizMe/src/app/layout/question-history/question-history-routing.module.ts","module.exports = \"<div [@routerTransition]>\\n    <app-page-header [heading]=\\\"'Question History'\\\" [icon]=\\\"'fa-desktop'\\\"></app-page-header>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-8\\\">\\n            <div *ngFor=\\\"let item of result; let i = index;\\\" class=\\\"card mb-3\\\">\\n                <div class=\\\"card-block\\\">\\n                    <div class=\\\"row\\\">\\n                        <div>\\n                            <span class=\\\"icon-small\\\" *ngIf=\\\"item.answer === item.userChoice\\\">\\n                                <i class=\\\"fa fa-check-circle fa-fw\\\"\\n                                   style=\\\"float: left; color:#2ec866; font-size: 20px;\\\"></i>\\n                                <h4 style=\\\"font-size: 1.3125em; color:#2ec866; opacity: .6;\\\"><b>{{i + 1}}. {{item.question}}</b></h4>\\n                            </span>\\n                            <span class=\\\"icon-small\\\" *ngIf=\\\"item.answer !== item.userChoice\\\">\\n                                <i class=\\\"fa fa-times fa-fw\\\" style=\\\"float: left; color:#ee3922; font-size: 20px;\\\"></i>\\n                                <h4 style=\\\"font-size: 1.3125em; color: #ee3922; opacity: .6;\\\"><b>{{i + 1}}. {{item.question}}</b></h4>\\n                            </span>\\n                        </div>\\n                        <!--<div class=\\\"col-sm-4\\\" style=\\\"float: right\\\">\\n                            <ngb-progressbar type=\\\"success\\\" [value]=\\\"item.score\\\" [max]=\\\"10\\\">\\n                                <i>{{item.score*100/10}}%</i>\\n                            </ngb-progressbar>\\n                        </div>-->\\n                    </div>\\n                    <hr>\\n                    <div class=\\\"small bold mdT pull-left\\\">\\n                        <span style=\\\"color: #979faf; font-weight: 900\\\" *ngIf=\\\"item.options.choiceA != undefined\\\">Choice A: &emsp;<span\\n                            style=\\\"color:#000000 ;font-weight: 900\\\">{{item.options.choiceA}}</span></span><br>\\n                        <span style=\\\"color: #979faf; font-weight: 900\\\" *ngIf=\\\"item.options.choiceB != undefined\\\">Choice B: &emsp;<span\\n                            style=\\\"color:#000000 ;font-weight: 900\\\">{{item.options.choiceB}}</span></span><br>\\n                        <span style=\\\"color: #979faf; font-weight: 900\\\" *ngIf=\\\"item.options.choiceC != undefined\\\">Choice C: &emsp;<span\\n                            style=\\\"color:#000000 ;font-weight: 900\\\">{{item.options.choiceC}}</span></span><br>\\n                        <span style=\\\"color: #979faf; font-weight: 900\\\" *ngIf=\\\"item.options.choiceD != undefined\\\">Choice D: &emsp;<span\\n                            style=\\\"color:#000000 ;font-weight: 900\\\">{{item.options.choiceD}}</span></span><br>\\n                        <span style=\\\"color: #979faf; font-weight: 900\\\" *ngIf=\\\"item.options.choiceE != undefined\\\">Choice E: &emsp;<span\\n                            style=\\\"color:#000000 ;font-weight: 900\\\">{{item.options.choiceE}}</span><br></span>&ensp;\\n                        <hr>\\n                        <span style=\\\"color: #979faf; font-weight: 900\\\">Your Choice: </span>\\n                        <span style=\\\"font-weight: 900\\\">{{item.userChoice}}</span> &ensp;\\n                        <span style=\\\"color: #979faf; font-weight: 900\\\">Correct Choice: </span>\\n                        <span style=\\\"font-weight: 900\\\">{{item.answer}}</span> &ensp;\\n                        <span style=\\\"color: #979faf; font-weight: 900\\\">Difficulty: </span>\\n                        <span style=\\\"font-weight: 900\\\"> Easy </span> &ensp;\\n                    </div>\\n                    <div>\\n                        <div class=\\\"card-body\\\">\\n                            <p>\\n                                <button type=\\\"button\\\" class=\\\"btn tn-sm btn-success\\\"\\n                                        (click)=\\\"getQuestionDiscussion(item.questionId,i)\\\"\\n                                        [attr.aria-expanded]=\\\"!bool[i]\\\" [attr.aria-controls]=\\\"'collapseExample'+i\\\">\\n                                    Discussion\\n                                </button>\\n                                <button type=\\\"button\\\" class=\\\"btn tn-sm btn-warning\\\"\\n                                        *ngIf=\\\"item.answer !== item.userChoice\\\"\\n                                (click)=\\\"getRecommendedBooks(content, item.question)\\\">\\n                                    Suggested Books\\n                                </button>\\n                            </p>\\n                            <div [id]=\\\"'collapseExample'+i\\\" *ngIf=\\\"bool[i]\\\">\\n                                <ul [id]=\\\"'ul'+i\\\" style=\\\"list-style: none\\\">\\n                                    <form>\\n                                        <textarea type=\\\"textarea\\\"\\n                                                  style=\\\"height: 50px;width: 90%;background-color: #eceeef; position: relative; font-size: 14px; \\\"\\n                                                  #newPost placeholder=\\\"Add a comment\\\" rows=\\\"4\\\" cols=\\\"50\\\" name=\\\"comment\\\"\\n                                                  [(ngModel)]=\\\"comment\\\"></textarea>\\n\\n                                        <button class=\\\"btn btn-primary\\\" (click)=\\\"postComment(item.questionId)\\\">Post\\n                                        </button>\\n                                    </form>\\n                                    <br><br>\\n                                    <li *ngFor=\\\"let info of information\\\">\\n                                        <div style=\\\"float: left\\\">{{info.username}}</div>\\n                                        <span style=\\\"float: right;margin-right: 20px\\\">{{info.timestamp | date:'MM/dd/yyyy h:mm:ss a'}}</span><br><br>\\n                                        <div>{{ info.content}}</div>\\n                                        <span id=\\\"upvote\\\" class=\\\"glyphicon glyphicon-thumbs-up\\\"\\n                                              (click)=\\\"incrementupVote(info.postId, info.upVote,i)\\\"><b\\n                                            style=\\\"cursor: pointer;text-decoration:underline \\\"> upvote</b> {{info.upVote}}</span>\\n                                        <span class=\\\"glyphicon glyphicon-thumbs-down\\\"\\n                                              (click)=\\\"incrementDownVote(info.postId, info.upVote,i)\\\"><b\\n                                            style=\\\"cursor: pointer;text-decoration:underline \\\"> downvote</b>  {{info.downVote}}</span>\\n\\n                                        <hr>\\n                                    </li>\\n                                </ul>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col col-sm-4\\\">\\n            <!-- <div class=\\\"card mb-3\\\">\\n                 <div class=\\\"card-header\\\">\\n                     Performance over {{this.totalQuiz}} Quizzes.\\n                 </div>\\n                 <div class=\\\"card-block\\\">\\n                     <canvas baseChart height=\\\"180px\\\"\\n                             [colors] = \\\"colorsOverride\\\"\\n                             [data]=\\\"[this.yourTotalScore,this.totalScore]\\\"\\n                             [labels]=\\\"['Points Scored', 'Points Lost']\\\"\\n                             [legend] = \\\"true\\\"\\n                             [chartType]=\\\"'doughnut'\\\"\\n                             [options] = \\\"options\\\"\\n                             (chartHover)=\\\"chartHovered($event)\\\"\\n                             (chartClick)=\\\"chartClicked($event)\\\">\\n                     </canvas>\\n                 </div>\\n             </div>-->\\n        </div>\\n    </div>\\n\\n</div>\\n\\n\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n    <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Top 10 Suggested JavaBooks</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <span *ngFor=\\\"let i of adaptiveData; let i=index;\\\">\\n            <p>{{i.topic}}</p>\\n            <p><a href=\\\"{{i.link}}\\\" target=\\\"_blank\\\">{{i.link}}</a></p>\\n            <hr>\\n        </span>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"c('Close click')\\\">Close</button>\\n    </div>\\n</ng-template>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sharvil/Desktop/ASU Courses/QuizMe/src/app/layout/question-history/question-history.component.html\n// module id = ../../../../../src/app/layout/question-history/question-history.component.html\n// module chunks = question-history.module","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".icon-small i {\\n  float: left;\\n  margin-right: 10px;\\n  border-radius: 10%;\\n  padding-top: 3px; }\\n\\n.icon-small + p {\\n  clear: left;\\n  margin-top: 15px; }\\n\\n.icon-small h4 {\\n  text-align: left; }\\n\\n.modal-dialog {\\n  max-width: 700px;\\n  margin: 30px auto; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sharvil/Desktop/ASU Courses/QuizMe/src/app/layout/question-history/question-history.component.scss\n// module id = ../../../../../src/app/layout/question-history/question-history.component.scss\n// module chunks = question-history.module","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\nimport {BackendService} from '../../backend.service';\nimport {Router} from '@angular/router';\nimport {routerTransition} from '../../router.animations';\nimport {ModalDismissReasons, NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\n\n@Component({\n    selector: 'app-question-history',\n    templateUrl: './question-history.component.html',\n    styleUrls: ['./question-history.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    animations: [routerTransition()]\n\n})\nexport class QuestionHistoryComponent implements OnInit {\n    closeResult: string;\n    information = [];\n    comment: any;\n    bool = [];\n    noOfChoices: number;\n    yourTotalScore: number;\n    userId = JSON.parse(localStorage.getItem('currentUser')).id;\n    username = JSON.parse(localStorage.getItem('currentUser')).email;\n    quizId = localStorage.getItem('quizId');\n    result: any;\n    totalQuiz: number;\n    totalScore: number;\n    question: string;\n    adaptiveData = [];\n    adaptiveDataFlag = false;\n    // Dashboard\n    /*options = {\n        cutoutPercentage: 70,\n        responsive: true,\n        elements: {\n            center: {\n                text: '90%',\n                color: '#FF6384',\n                fontStyle: 'Arial',\n                sidePadding: 20,\n            }\n        }\n\n    };\n    colorsOverride: Array<Color> = [{\n        backgroundColor: ['#2ec866', 'lightgrey'],\n        hoverBackgroundColor: ['#2ec866', 'lightgrey']\n    }];*/\n    valueFrom = false;\n\n    constructor(public router: Router, private backend: BackendService, private modalService: NgbModal) {\n    }\n\n    ngOnInit() {\n        localStorage.setItem('userId', this.userId);\n        localStorage.setItem('userName', this.username);\n        let i: number;\n        this.backend.getQuestionHistory(this.quizId, this.userId)\n            .subscribe(status => {\n                console.log(status);\n                this.result = status;\n                this.noOfChoices = Object.keys(this.result[0].options).length;\n                this.bool = [];\n                for (let i = 0; i < this.result.length; i++)\n                    this.bool[i] = false;\n                // for (i = 0; i < this.result.length; i++) {\n                //     this.yourTotalScore = this.yourTotalScore + this.result[i].score;\n                // }\n                // this.totalScore = this.result.length * 10 - this.yourTotalScore;\n                // this.totalQuiz = this.result.length;\n            });\n    }\n\n    getQuestionDiscussion(questionId, selected) {\n        console.log('question id ' + questionId);\n        this.information = [];\n        this.backend.getQuestionDiscussion(questionId).subscribe(\n            (response) => {\n                // console.log(response);\n                for (let i = 0; i < response.length; i++) {\n                    const newDate = new Date(response[i].timestamp);\n                    const elem = {\n                        'username': response[i].email,\n                        'timestamp': newDate,\n                        'content': response[i].post,\n                        'upVote': response[i].upvote,\n                        'downVote': response[i].downvote,\n                        'postId': response[i].id,\n                    };\n                    console.log(this.information);\n                    this.information.push(elem);\n                }\n                this.information.sort(function (a, b) {\n                    return b.timestamp - a.timestamp;\n                });\n                console.log(this.information);\n            }\n        );\n        for (let i = 0; i < this.result.length; i++) {\n            if (i == selected) {\n            }\n            else\n                this.bool[i] = false;\n        }\n        if (this.valueFrom != true) {\n            this.bool[selected] = !this.bool[selected];\n        }\n        else {\n            this.valueFrom = false;\n        }\n\n    }\n\n    postComment(questionId) {\n        console.log(questionId);\n        this.username = localStorage.getItem('userName');\n        const payLoad = {\n            'user_id': parseInt(localStorage.getItem('userId')),\n            'question_id': questionId,\n            'post': this.comment,\n            'up_vote': 0,\n            'down_vote': 0\n        };\n        this.backend.postDiscussion(payLoad).subscribe(\n            (response: any) => {\n                const elem = {\n                    'username': localStorage.getItem('userName'),\n                    'timestamp': response.timestamp,\n                    'content': this.comment,\n                    'upvote': 0,\n                    'downvote': 0,\n                };\n                this.information.push(elem);\n                console.log((response));\n                this.comment = \"\";\n            }\n        );\n        console.log(this.information.length);\n    }\n\n    incrementupVote(postId: any, questionId: any, i) {\n        console.log(postId);\n        this.backend.incrementUpvote(postId).subscribe(\n            (response: Response) => {\n                console.log(response['vote']);\n                //     this.elementRef.nativeElement.querySelector('').textContent = upVote;\n                this.valueFrom = true;\n                this.getQuestionDiscussion(questionId, i);\n            });\n    }\n\n    incrementDownVote(postId: any, questionId: any, i) {\n        this.backend.incrementDownVote(postId).subscribe(\n            (response: Response) => {\n                console.log(postId);\n                console.log(response['vote']);\n                //      this.elementRef.nativeElement.querySelector('').textContent = upVote;\n                this.getQuestionDiscussion(questionId, i);\n            });\n    }\n\n    getRecommendedBooks(content, question) {\n        this.adaptiveData = [];\n        let dat = question.substring(0, 200);\n        dat = dat.replace(/\\(|\\)/g, \"\");\n        dat = dat.replace(/,/g, \" \");\n        dat = dat.replace(/;/g, \"\");\n        dat = dat.replace(/:/g, \"\");\n        dat = dat.replace(/\\+/g, \"\");\n        dat = dat.replace(/=/g, \"\");\n        dat = dat.replace(/</g, \"\");\n        dat = dat.replace(/>/g, \"\");\n        dat = dat.replace(/\\?/g, \"\");\n        dat = dat.replace(/\\[/g, \"\");\n        dat = dat.replace(/]/g, \"\");\n        dat = dat.replace(/{/g, \"\");\n        dat = dat.replace(/}/g, \"\");\n        dat = dat.replace(/%/g, \"\");\n        dat = dat.substring(0, dat.length-1);\n        console.log(dat);\n        this.backend.getRecommendation(dat).subscribe(\n            (response: any) => {\n                for (let i of response.hits.hits) {\n                    let topic = i._source.topic;\n                    topic = topic.replace(\"<h1>\", \"\");\n                    topic = topic.replace(\"</h1>\", \"\");\n                    let obj = {\"link\" : i._source.link, \"topic\": topic};\n                    this.adaptiveData.push(obj);\n                }\n                console.log(this.adaptiveData);\n            }\n        );\n        this.open(content);\n    }\n\n    open(content) {\n        this.modalService.open(content).result.then((result) => {\n            this.closeResult = `Closed with: ${result}`;\n        }, (reason) => {\n            this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n        });\n    }\n\n    private getDismissReason(reason: any): string {\n        if (reason === ModalDismissReasons.ESC) {\n            return 'by pressing ESC';\n        } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n            return 'by clicking on a backdrop';\n        } else {\n            return  `with: ${reason}`;\n        }\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sharvil/Desktop/ASU Courses/QuizMe/src/app/layout/question-history/question-history.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {QuestionHistoryComponent} from './question-history.component';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {PageHeaderModule} from '../../shared/modules/page-header/page-header.module';\nimport {FormsModule} from '@angular/forms';\nimport {ChartsModule} from 'ng2-charts';\nimport {QuestionHistoryRoutingModule} from './question-history-routing.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        QuestionHistoryRoutingModule,\n        FormsModule,\n        ChartsModule,\n        PageHeaderModule,\n        NgbModule.forRoot(),\n    ],\n    declarations: [QuestionHistoryComponent]\n})\nexport class QuestionHistoryModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sharvil/Desktop/ASU Courses/QuizMe/src/app/layout/question-history/question-history.module.ts"],"sourceRoot":"webpack:///"}